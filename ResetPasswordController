<?php

declare(strict_types=1) ;

namespace Authentication\Infrastructure\Controllers;

use Authentication\Infrastructure\Forms\ResetPasswordForm;
use Laminas\Mvc\Controller\AbstractActionController;
use Laminas\View\Model\ViewModel;
use Exception ;

/**
 * this controller handle the reset password flow
 * 
 * @author haclong
 */
class ResetPasswordController extends AbstractActionController
{
    protected $resetPasswordManager ;
    protected $mailManager ;
    protected $form ;
    protected $guid ;

    public function __construct($resetPasswordManager, $mailManager)
    {
        $this->resetPasswordManager = $resetPasswordManager ;
        $this->mailManager = $mailManager ;
        $this->form = new ResetPasswordForm();
    }

    // wishlist/password/reset -> redirige vers password/request 
    // wishlist/password/reset/#### (not process)
    public function resetAction()
    {
        $guid = $this->params()->fromRoute('guid') ;
        
        // si le guid est invalide (ip / session id / expiry date)
        // renvoyer vers le formulaire de request
        $this->checkGuidValidity($guid) ;

        return new ViewModel([
            'form' => $this->form,
        ]) ;
    }

    protected function processResetFormWhenDataBeenPosted($form)
    {
        if($form->isValid()) {
            // get filtered and validated data
            $validatedData = $form->getData() ;

            // allow ResetPasswordManager to perform password reset attempt
            // catch exception or redirect depending on reset result
             $this->resetPasswordManager->disableToken($validatedData['token']) ;

            return $this->redirect()->toRoute('login') ;
        }
    }

    protected function checkGuidValidity($guid)
    {
        $this->resetPasswordManager->validateToken($guid) ;
    }
}
